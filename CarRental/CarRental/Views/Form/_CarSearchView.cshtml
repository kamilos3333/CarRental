@model CarRental.Models.TempReservation


<div class="form-border">
    <h2>Search car rental</h2>
    <div class="container">
        @using (Html.BeginForm("SearchResult", "Form", FormMethod.Post))
        {
            <div class="row justify-content-center">
                <div class="col-4">
                    <div class="form-group">
                        <label>Picking up</label>
                        @Html.DropDownListFor(model => model.Place1, ViewBag.PlacesList as SelectList, new { @class = "form-control selectpicker" })
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        <label>Dropping off</label>
                        @Html.DropDownListFor(model => model.Place2, ViewBag.PlacesList as SelectList, new { @class = "form-control selectpicker" })
                    </div>
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-4">
                    <div class="form-group">
                        <label>Pick-up date</label>
                        <div class="form-row">
                            <div class="col">
                                @Html.EditorFor(model => model.DateB, new { htmlAttributes = new { @class = "form-control", @id = "from" } })
                            </div>
                            <div class="col">
                                @Html.EditorFor(model => model.TimeB, new { htmlAttributes = new { @class = "form-control time", @id = "basicExample1" } })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        <label>Drop-off date</label>
                        <div class="form-row">
                            <div class="col">
                                @Html.EditorFor(model => model.DateE, new { htmlAttributes = new { @class = "form-control", @id = "to" } })
                            </div>
                            <div class="col">
                                @Html.EditorFor(model => model.TimeE, new { htmlAttributes = new { @class = "form-control time", @id = "basicExample2" } })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <button type="submit" class="btn btn-primary btn-lg btn-block">Search <i class="fas fa-search"></i></button>
        }
    </div>
</div>

<script>
    $(document).ready(function () {
        $('.selectpicker').selectpicker({
            liveSearch: true,
            showSubtext: true
        });
    });

    $(function () {
        $('#basicExample1').timepicker({
            'timeFormat': 'H:i',
            'disableTextInput': 'true',
        });
    });

    $(function () {
        $('#basicExample2').timepicker({
            'timeFormat': 'H:i',
            'disableTextInput': 'true',
        });
    });

    $(function () {
        var dateFormat = "yy/mm/dd",
            from = $("#from")
                .datepicker({
                    dateFormat: "yy/mm/dd",
                    changeMonth: true,
                    numberOfMonths: 2,
                    minDate: new Date(((new Date).getTime() + 24 * 60 * 60 * 1000))
                })
                .on("change", function () {
                    to.datepicker("option", "minDate", getDate(this));
                }).attr('readonly', 'readonly'),
            to = $("#to").datepicker({
                dateFormat: "yy/mm/dd",
                defaultDate: "+1w",
                changeMonth: true,
                numberOfMonths: 2,
            }).attr('readonly', 'readonly')
                .on("change", function () {
                    from.datepicker("option", "maxDate", getDate(this));
                });

        function getDate(element) {
            var date;
            try {
                date = $.datepicker.parseDate(dateFormat, element.value);
            } catch (error) {
                date = null;
            }

            return date;
        }
    });
    
</script>
